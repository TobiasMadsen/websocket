// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// wsCreate
SEXP wsCreate(std::string uri, Rcpp::Function onMessage, Rcpp::Function onOpen, Rcpp::Function onClose, Rcpp::Function onFail);
RcppExport SEXP _websocketClient_wsCreate(SEXP uriSEXP, SEXP onMessageSEXP, SEXP onOpenSEXP, SEXP onCloseSEXP, SEXP onFailSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type uri(uriSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type onMessage(onMessageSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type onOpen(onOpenSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type onClose(onCloseSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type onFail(onFailSEXP);
    rcpp_result_gen = Rcpp::wrap(wsCreate(uri, onMessage, onOpen, onClose, onFail));
    return rcpp_result_gen;
END_RCPP
}
// wsConnect
void wsConnect(SEXP client_xptr);
RcppExport SEXP _websocketClient_wsConnect(SEXP client_xptrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type client_xptr(client_xptrSEXP);
    wsConnect(client_xptr);
    return R_NilValue;
END_RCPP
}
// wsRestart
void wsRestart(SEXP client_xptr);
RcppExport SEXP _websocketClient_wsRestart(SEXP client_xptrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type client_xptr(client_xptrSEXP);
    wsRestart(client_xptr);
    return R_NilValue;
END_RCPP
}
// wsPoll
void wsPoll(SEXP client_xptr);
RcppExport SEXP _websocketClient_wsPoll(SEXP client_xptrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type client_xptr(client_xptrSEXP);
    wsPoll(client_xptr);
    return R_NilValue;
END_RCPP
}
// wsSend
void wsSend(SEXP client_xptr, std::string msg);
RcppExport SEXP _websocketClient_wsSend(SEXP client_xptrSEXP, SEXP msgSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type client_xptr(client_xptrSEXP);
    Rcpp::traits::input_parameter< std::string >::type msg(msgSEXP);
    wsSend(client_xptr, msg);
    return R_NilValue;
END_RCPP
}
// wsReset
void wsReset(SEXP client_xptr);
RcppExport SEXP _websocketClient_wsReset(SEXP client_xptrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type client_xptr(client_xptrSEXP);
    wsReset(client_xptr);
    return R_NilValue;
END_RCPP
}
// wsClose
void wsClose(SEXP client_xptr);
RcppExport SEXP _websocketClient_wsClose(SEXP client_xptrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type client_xptr(client_xptrSEXP);
    wsClose(client_xptr);
    return R_NilValue;
END_RCPP
}
// wsStopped
bool wsStopped(SEXP client_xptr);
RcppExport SEXP _websocketClient_wsStopped(SEXP client_xptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type client_xptr(client_xptrSEXP);
    rcpp_result_gen = Rcpp::wrap(wsStopped(client_xptr));
    return rcpp_result_gen;
END_RCPP
}
// wsState
std::string wsState(SEXP client_xptr);
RcppExport SEXP _websocketClient_wsState(SEXP client_xptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type client_xptr(client_xptrSEXP);
    rcpp_result_gen = Rcpp::wrap(wsState(client_xptr));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_websocketClient_wsCreate", (DL_FUNC) &_websocketClient_wsCreate, 5},
    {"_websocketClient_wsConnect", (DL_FUNC) &_websocketClient_wsConnect, 1},
    {"_websocketClient_wsRestart", (DL_FUNC) &_websocketClient_wsRestart, 1},
    {"_websocketClient_wsPoll", (DL_FUNC) &_websocketClient_wsPoll, 1},
    {"_websocketClient_wsSend", (DL_FUNC) &_websocketClient_wsSend, 2},
    {"_websocketClient_wsReset", (DL_FUNC) &_websocketClient_wsReset, 1},
    {"_websocketClient_wsClose", (DL_FUNC) &_websocketClient_wsClose, 1},
    {"_websocketClient_wsStopped", (DL_FUNC) &_websocketClient_wsStopped, 1},
    {"_websocketClient_wsState", (DL_FUNC) &_websocketClient_wsState, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_websocketClient(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
